# Config file for automatic testing at travis-ci.org
env:
  global:
    - docker_url=registry.hub.docker.com
    - docker_repository=mlbench
jobs:
  include:
    - stage: test
      language: python
      python:
        - 3.4
        - 3.5
        - 3.6

      # Command to install dependencies, e.g. pip install -r requirements.txt --use-mirrors
      install:
        - pip install -U tox-travis
        - pip install -r requirements_dev.txt

      # Command to run tests, e.g. python setup.py test
      script:
        - tox

    - stage: build docker
      language: bash
      sudo: required

      services:
        - docker
      install: true

      before_script: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin ${docker_url}
      script:
        - docker build -f compose/master/Dockerfile -t ${docker_url}/${docker_repository}/mlbench_master:travis-ci-test .
        - docker pull mlbench/mlbench_worker:mlbench-worker-base && docker build -f compose/worker/Dockerfile -t ${docker_url}/${docker_repository}/mlbench_worker:travis-ci-test .
    - stage: test kubernetes
      language: bash
      sudo: required
      env:
        - CNI_PLUGIN=weave

      before_install:
        # install Minikube + kubectl
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        - chmod +x minikube
        - sudo cp minikube /usr/local/bin/
        - rm minikube
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x kubectl
        - sudo cp kubectl /usr/local/bin/
        - rm kubectl
        # https://github.com/kubernetes/minikube/issues/1899
        - sudo minikube start --vm-driver=none
      install:
        # install helm
        - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
        - chmod 700 get_helm.sh
        - ./get_helm.sh
      script:
        - |
          helm template  \
          --set master.image.repository=${docker_url}/${docker_repository}/mlbench-master \
          --set master.image.tag=travis-ci-test \
          --set worker.image.repository=${docker_url}/${docker_repository}/mlbench-worker \
          --set worker.image.tag=travis-ci-test \
          --set worker.imagePullSecret=regcred \
          --set master.imagePullSecret=regcred \
          --set limits.cpu=1000m \
          --set limits.worker=1 \
          --set worker.replicaCount=1 \
          --set limits.bandwidth=100 \
          --set limits.gpu=0 \
          --name travis-test \
          charts/mlbench/ | ./kubectl apply --v=5 --validate --dry-run -f -

    - stage: deploy develop
      if: branch = develop
      language: bash
      services: docker
      before_install:
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin ${docker_url}
      before_script:
        - docker pull ${docker_repository}/mlbench_master:travis-ci-test
        - docker pull ${docker_repository}/mlbench_worker:travis-ci-test
        - docker tag ${docker_repository}/mlbench_master:travis-ci-test ${docker_url}/${docker_repository}/mlbench_master:develop
        - docker tag ${docker_repository}/mlbench_worker:travis-ci-test ${docker_url}/${docker_repository}/mlbench_worker:develop
      script:
        - docker push ${docker_url}/${docker_repository}/mlbench_master:develop
        - docker push ${docker_url}/${docker_repository}/mlbench_worker:develop

    - stage: deploy
      if: branch = master
      language: bash
      services: docker
      before_install:
        - export MASTER_VERSION=$(awk '$1 == "version:" { print $2; exit }' charts/mlbench/Chart.yaml)
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ${docker_url}
      before_script:
        - docker pull ${docker_repository}/mlbench_master:travis-ci-test
        - docker pull ${docker_repository}/mlbench_worker:travis-ci-test
        - docker tag ${docker_repository}/mlbench_master:travis-ci-test ${docker_url}/${docker_repository}/mlbench_master:latest
        - docker tag ${docker_repository}/mlbench_worker:travis-ci-test ${docker_url}/${docker_repository}/mlbench_worker:latest
        - docker tag ${docker_repository}/mlbench_master:travis-ci-test ${docker_url}/${docker_repository}/mlbench_master:${MASTER_VERSION}
        - docker tag ${docker_repository}/mlbench_worker:travis-ci-test ${docker_url}/${docker_repository}/mlbench_worker:${MASTER_VERSION}
      script:
        - docker push ${docker_url}/${docker_repository}/mlbench_master:latest
        - docker push ${docker_url}/${docker_repository}/mlbench_master:${MASTER_VERSION}
        - docker push ${docker_url}/${docker_repository}/mlbench_worker:latest
        - docker push ${docker_url}/${docker_repository}/mlbench_worker:${MASTER_VERSION}


stages:
  - test
  - build docker
  - test helm
  - deploy develop
  - deploy
