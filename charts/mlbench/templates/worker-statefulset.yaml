apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "mlbench.worker.fullname" . }}
  labels:
    app: {{ template "mlbench.name" . }}
    chart: {{ template "mlbench.chart" . }}
    component: "{{ .Values.worker.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "mlbench.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "mlbench.name" . }}
        component: "{{ .Values.worker.name }}"
        release: {{ .Release.Name }}
        role: worker
    spec:
      serviceAccountName: {{ template "mlbench.worker.fullname" . }}-sa
      affinity:
        podAntiAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution: 
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - "{{ .Values.worker.name }}"
            topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ template "mlbench.name" . }}-{{ .Values.worker.name }}
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          stdin: true
          tty: true
          ports:
            - name: ssh
              containerPort: 22
              hostPort: 16166
              protocol: TCP
          # livenessProbe:
          #   tcpSocket:
          #     port: ssh
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # readinessProbe:
          #   tcpSocket:
          #     port: ssh
          #   initialDelaySeconds: 15
          #   periodSeconds: 20
          resources:
            limits:
              cpu: {{required "Please enter the maximum number of cpus (cores) available per node with the .Values.limits.cpu setting! E.g. Kubernetes 8 or 8000m notation for 8 cpus"  .Values.limits.cpu }}
              nvidia.com/gpu: {{required "Please enter the maximum number of gpus available per node with the .Values.limits.gpu setting! E.g. Kubernetes 2 notation for 2 gpus"  .Values.limits.gpu }}
          volumeMounts:
          - name: mlbench-ssh-key
            mountPath: /ssh-key/root
{{ if .Values.gcePersistentDisk.enabled }}
          - name: nfs-volume
            mountPath: /datasets
{{ end }}
          securityContext:
            privileged: true
      volumes:
      - name: mlbench-ssh-key
        secret:
          secretName: {{ .Release.Name }}-ssh-key
          defaultMode: 256
{{ if .Values.gcePersistentDisk.enabled }}
      - name: nfs-volume
        persistentVolumeClaim:
          claimName: nfs-pvc
{{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
